{
  "task": "Add schema-aware branching to _normalise_asset()",
  "objective": "Ensure generator output conditionally includes provenance and metadata fields only for schema â‰¥ 0.7.4. Prevents 0.7.3 validator rejections from enriched assets.",
  "changes": [
    {
      "id": "normalise_asset_schema_branching",
      "description": "Update _normalise_asset() to branch on schema_version and strip non-0.7.3 fields.",
      "edits": [
        {
          "file": "labs/generator/external.py",
          "pattern": "def _normalise_asset",
          "multiple": false,
          "replacement": "from datetime import datetime\nimport uuid\n\ndef _normalise_asset(self, asset: dict, input_parameters: dict | None = None):\n    asset['$schema'] = self.schema_url\n\n    # Branch by schema_version: enrich only for >= 0.7.4\n    if getattr(self, 'schema_version', '0.7.3') >= '0.7.4':\n        asset['provenance'] = self._make_provenance_block()\n        asset['asset_id'] = str(uuid.uuid4())\n        asset['timestamp'] = datetime.now().isoformat()\n    else:\n        for field in ('provenance', 'asset_id', 'timestamp', 'parameter_index'):\n            asset.pop(field, None)\n\n    # Preserve existing input_parameters propagation\n    if input_parameters:\n        asset.setdefault('provenance', {}).setdefault('input_parameters', input_parameters)\n\n    return asset"
        }
      ]
    }
  ],
  "constraints": {
    "rules": [
      "Do not modify generator API signatures or provenance helpers.",
      "Keep import ordering consistent with PEP8.",
      "Maintain backward compatibility with 0.7.3 validation.",
      "Preserve provenance enrichment for schema >= 0.7.4."
    ]
  },
  "exit_criteria": [
    "Assets generated with --schema-version 0.7.3 validate cleanly against 0.7.3 schemas.",
    "Assets generated with --schema-version 0.7.4 retain provenance, asset_id, and timestamp.",
    "pytest passes for both schema versions with identical business logic behavior."
  ]
}
