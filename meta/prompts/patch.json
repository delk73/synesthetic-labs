{
  "task": "Unify validation flow and remove redundant review flags",
  "objective": "Make MCP validation the single source of truth. Remove conflicting local validation flags and ensure all review and CLI reporting reflects only MCP results.",
  "changes": [
    {
      "id": "validation_flag_cleanup",
      "description": "Stop assigning validation_status='passed' before MCP runs; tie all validation outcomes to MCP response only.",
      "edits": [
        {
          "file": "labs/critic.py",
          "pattern": "validation_status",
          "multiple": true,
          "replacement": "# Unified validation logic\nif 'mcp_response' in review:\n    review['ok'] = review['mcp_response'].get('ok', False)\n    review['validation_status'] = 'passed' if review['ok'] else 'failed'\nelse:\n    review['ok'] = False\n    review['validation_status'] = 'failed'"
        }
      ]
    },
    {
      "id": "remove_soft_validation",
      "description": "Remove local soft validation pass/fail states; rely entirely on MCP for final verdict.",
      "edits": [
        {
          "file": "labs/critic.py",
          "pattern": "review\\['validation_status'\\] = 'passed'",
          "multiple": true,
          "replacement": "# Local validation removed â€” will be set after MCP"
        },
        {
          "file": "labs/critic.py",
          "pattern": "review\\['ok'\\] = True",
          "multiple": true,
          "replacement": "# 'ok' set by MCP only"
        }
      ]
    },
    {
      "id": "cli_validation_simplify",
      "description": "Simplify CLI reporting to show MCP validation only, with explicit strict/relaxed behavior.",
      "edits": [
        {
          "file": "labs/cli.py",
          "pattern": "if result\\['ok'\\]:",
          "multiple": false,
          "replacement": "if result.get('mcp_response', {}).get('ok', False):"
        },
        {
          "file": "labs/cli.py",
          "pattern": "Validation (passed|failed)",
          "multiple": true,
          "replacement": "MCP validation (passed|failed)"
        }
      ]
    }
  ],
  "constraints": {
    "style": "explicit, deterministic, PEP8-clean",
    "rules": [
      "No duplicate validation verdicts.",
      "All validation_status and ok flags must reflect MCP response.",
      "Relaxed mode may log warnings but never fake 'passed'.",
      "No new dependencies or side effects."
    ]
  },
  "exit_criteria": [
    "Assets show only one validation verdict (ok/failed) from MCP.",
    "No code assigns validation_status='passed' before MCP.",
    "Strict mode stops immediately on MCP failure; relaxed mode logs warning but saves asset.",
    "Audit rule mcp-validation-flow-v0.3.5 = Present."
  ]
}
