{
  "task": "Align MCP validation with v0.2.8 spec ($schema enforcement)",
  "objective": "Make MCP validator require top-level $schema in assets, reject legacy schema/$schemaRef params, and update tests/docs/fixtures accordingly.",
  "changes": [
    {
      "id": "validator_require_$schema",
      "description": "Update validate_asset and validate_many to require $schema in asset and return validation_failed at /$schema when missing.",
      "edits": [
        {
          "file": "mcp/validate.py",
          "pattern": "def validate_asset\\(asset, schema.*\\):",
          "multiple": false,
          "replacement": "def validate_asset(asset, *_):"
        },
        {
          "file": "mcp/validate.py",
          "pattern": "if not schema:",
          "multiple": true,
          "replacement": "if \"$schema\" not in asset:\n        return {\"ok\": False, \"reason\": \"validation_failed\", \"errors\": [{\"path\": \"/$schema\", \"msg\": \"top-level $schema is required\"}]}"
        },
        {
          "file": "mcp/validate.py",
          "pattern": "if 'schema' in params.*",
          "multiple": true,
          "replacement": "# legacy schema param removed per v0.2.8 spec"
        }
      ]
    },
    {
      "id": "reject_$schemaRef",
      "description": "Remove support for $schemaRef stripping.",
      "edits": [
        {
          "file": "mcp/validate.py",
          "pattern": "if '\\$schemaRef' in asset.*",
          "multiple": true,
          "replacement": "if \"$schemaRef\" in asset:\n        return {\"ok\": False, \"reason\": \"validation_failed\", \"errors\": [{\"path\": \"/$schema\", \"msg\": \"$schemaRef is no longer supported (use $schema)\"}]}"
        }
      ]
    },
    {
      "id": "tests_update",
      "description": "Update golden fixtures and tests to use $schema instead of schema/$schemaRef.",
      "edits": [
        {
          "file": "tests/fixtures/golden.jsonl",
          "pattern": "\"schema\":",
          "multiple": true,
          "replacement": "\"$schema\":"
        },
        {
          "file": "libs/synesthetic-schemas/examples/SynestheticAsset_Example1.json",
          "pattern": "\"\\$schemaRef\"",
          "multiple": true,
          "replacement": "\"$schema\""
        }
      ]
    },
    {
      "id": "docs_update",
      "description": "Update README docs to show $schema usage.",
      "edits": [
        {
          "file": "README.md",
          "pattern": "schema param",
          "multiple": true,
          "replacement": "top-level $schema field"
        }
      ]
    }
  ],
  "constraints": {
    "rules": [
      "No new dependencies.",
      "Only modify validator, fixtures, and docs.",
      "All tests must pass with examples containing $schema only."
    ]
  },
  "exit_criteria": [
    "validate_asset/validate_many fail with missing $schema",
    "schema/$schemaRef rejected explicitly",
    "tests and fixtures reference $schema only",
    "README documents $schema contract",
    "pytest passes with updated examples"
  ]
}
