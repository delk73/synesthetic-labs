{
  "task": "Implement v0.2 features and finalize alignment",
  "objective": "Deliver socket transport, patch lifecycle orchestration, ratings stub, container hardening, and update documentation/tests to reflect v0.2 scope.",
  "changes": [
    {
      "id": "socket_transport",
      "description": "Add Unix socket transport to MCP adapter.",
      "edits": [
        "Add labs/mcp/socket_main.py: implement AF_UNIX single-client loop with 1 MiB guard.",
        "Update labs/mcp/__main__.py: branch on MCP_ENDPOINT=socket.",
        "Update labs/transport.py: factor common framing helpers.",
        "Add tests/test_socket.py: cover request/response, payload cap, unlink on shutdown."
      ]
    },
    {
      "id": "patch_lifecycle",
      "description": "Introduce patch preview/apply/rate stubs.",
      "edits": [
        "Add labs/patches.py: preview/apply functions wrapping MCP validation.",
        "Update labs/cli.py: new subcommands `preview`, `apply`, `rate`.",
        "Update labs/agents/critic.py: integrate patch validation before apply.",
        "Add tests/test_patches.py: cover preview/apply/rate stubs."
      ]
    },
    {
      "id": "ratings_stub",
      "description": "Critic agent records rating stubs.",
      "edits": [
        "Update labs/agents/critic.py: write rating entries into logs.",
        "Extend meta/output/labs/ JSONL format with rating field.",
        "Add tests/test_ratings.py: confirm ratings stub logged."
      ]
    },
    {
      "id": "container_hardening",
      "description": "Harden container execution to run as non-root and enforce path traversal guards.",
      "edits": [
        "Dockerfile: add non-root user and switch USER.",
        "labs/core.py: normalize schema/example paths and reject traversal.",
        "Add tests/test_path_guard.py: assert `..` and absolute paths rejected."
      ]
    },
    {
      "id": "docs_refresh",
      "description": "Update docs to reflect v0.2 scope.",
      "edits": [
        "docs/labs_spec.md: add v0.2 scope, baseline, validation, logging, exit criteria.",
        "README.md: add MCP socket usage, patch lifecycle CLI commands, LABS_FAIL_FAST semantics.",
        "AGENTS.md: snapshot updated with generator, critic, patch lifecycle roles."
      ]
    }
  ],
  "constraints": {
    "rules": [
      "No new dependencies beyond Python stdlib.",
      "Socket and STDIO transports must both enforce 1 MiB cap.",
      "Patch lifecycle may be stubbed but must log structured outputs.",
      "All tests must pass after patch."
    ]
  },
  "exit_criteria": [
    "MCP socket transport implemented and tested.",
    "Patch preview/apply/rate CLI functional and logged.",
    "Critic logs rating stubs.",
    "Container runs as non-root with path guards enforced.",
    "Docs and README updated for v0.2 scope.",
    "Audit passes with no remaining divergences for v0.2."
  ]
}
