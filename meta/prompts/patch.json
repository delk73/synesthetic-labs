{
  "task": "Refactor Generator and Prompt Experiment to conform to labs_spec.md v0.1",
  "objective": "Ensure GeneratorAgent always emits full canonical assets (shader/tone/haptic/control) via AssetAssembler, fix prompt experiment harness, normalize version markers, and sync .env/docs.",
  "changes": [
    {
      "id": "generator_wiring",
      "description": "Wire GeneratorAgent.propose to AssetAssembler so all proposals are canonical schema-ready assets.",
      "edits": [
        "Update labs/agents/generator.py: GeneratorAgent.propose should call AssetAssembler.generate instead of returning metadata-only payloads.",
        "Adjust labs/cli.py to work with full assets returned by GeneratorAgent.propose.",
        "Update tests/test_generator.py and tests/test_pipeline.py to assert shader/tone/haptic/control sections are present."
      ]
    },
    {
      "id": "prompt_experiment_refactor",
      "description": "Refactor prompt experiment harness to assemble assets before MCP validation.",
      "edits": [
        "Update labs/experiments/prompt_experiment.py to build full assets with AssetAssembler before sending to MCP.",
        "Extend tests/test_prompt_experiment.py to assert schema-valid assets pass MCP validation instead of metadata-only payloads.",
        "Ensure CriticAgent handles prompt experiments consistently with CLI assets."
      ]
    },
    {
      "id": "version_alignment",
      "description": "Normalize version markers across generator, assembler, and provenance to v0.1.",
      "edits": [
        "Update labs/agents/generator.py, labs/generator/assembler.py, and labs/generator/shader.py to stamp v0.1 in agent/version metadata.",
        "Update README.md and docs/labs_spec.md to reflect v0.1 (remove stray v0.2/v0.3 references)."
      ]
    },
    {
      "id": "env_docs_sync",
      "description": "Update environment scaffolding and documentation for clarity.",
      "edits": [
        "Update .env.example to include MCP_ADAPTER_CMD, SYN_SCHEMAS_DIR, LABS_EXPERIMENTS_DIR, and stub MCP_HOST/MCP_PORT entries to satisfy init_labs.json expectations.",
        "Clarify in README.md that MCP validation is STDIO-only, but MCP_HOST/PORT are retained as no-op placeholders for compatibility.",
        "Remove unused SYN_EXAMPLES_DIR or document as deprecated."
      ]
    }
  ],
  "constraints": {
    "rules": [
      "No new dependencies beyond Python stdlib.",
      "GeneratorAgent must always produce schema-valid assets via AssetAssembler.",
      "Tests must pass after patch, including prompt_experiment pipeline.",
      "Docs, version strings, and .env must be consistent with v0.1 spec."
    ]
  },
  "exit_criteria": [
    "GeneratorAgent.propose returns full canonical assets, not metadata-only.",
    "Prompt experiment harness validates full assets successfully via MCP.",
    "All provenance/version markers aligned to v0.1.",
    "README.md, labs_spec.md, and .env.example consistent with implementation.",
    "Audit passes with no divergences remaining for v0.1 scope."
  ]
}
