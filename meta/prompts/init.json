{
  "task": "Initialize synesthetic-labs repo (v0.1 Generator + Critic)",
  "objective": "Stand up the repo skeleton and initial files per labs_spec.md with lifecycle/datasets scaffolds and MCP-aware validation behavior.",
  "constraints": {
    "language": "Python (>=3.11, tested 3.11â€“3.13)",
    "style": "KISS, deterministic, minimal deps",
    "schemas": "Consume synesthetic-schemas submodule via MCP for validation",
    "runtime": "Containerized dev/test harness with pytest",
    "output_structure": [
      "labs/ (agents, lifecycle/, datasets/, __init__.py, cli.py, logging.py)",
      "tests/ (test_generator.py, test_critic.py, test_pipeline.py)",
      "meta/prompts/, meta/output/, meta/backlog.md, AGENTS.md",
      "requirements.txt (pinned runtime/test deps)",
      "Dockerfile, docker-compose.yml, test.sh",
      "README.md (minimal, points to docs/labs_spec.md and documents MCP fallback)",
      "docs/labs_spec.md (this spec)",
      ".github/workflows/ci.yml (stub CI workflow)",
      ".env.example (stubbed, enumerates MCP_HOST, MCP_PORT, SYN_* vars)"
    ],
    "validation": [
      "MCP adapter remains authority for schema validation when reachable",
      "CriticAgent must log 'validation skipped' if MCP is unavailable",
      "CriticAgent must capture and log MCP response payloads when returned"
    ],
    "tests": "pytest for unit, integration, end-to-end pipeline"
  },
  "exit_criteria": [
    "Repo skeleton exists with all required dirs/files including lifecycle/ and datasets/",
    "Generator and critic agent stubs present under labs/",
    "CriticAgent implements MCP fallback + response logging",
    "CLI stub in labs/cli.py runs with --help and falls back gracefully if MCP unavailable",
    "Pytest discovers empty test stubs in tests/",
    "Docker test harness builds and runs pytest green",
    "README minimal, includes MCP fallback note, spec in docs/labs_spec.md",
    "AGENTS.md present as baseline agent snapshot",
    "Stub .github/workflows/ci.yml committed",
    ".env.example present, lists MCP_HOST, MCP_PORT, SYN_*"
  ]
}
