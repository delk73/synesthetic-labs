{
  "id": "labs-spec-v2.0.0-phase8-audit-r2",
  "type": "codex_audit_prompt",
  "description": "Audit Synesthetic Labs Phase 8 (Strict Mode LLM Generation) - Azure structured output for control, modulation, shader components only.",
  "input": {
    "spec_version": "v2.0.0",
    "spec_ref": "docs/phase8_strict_mode.md",
    "target_output": {
      "files": ["meta/output/labs_phase8_state.md"],
      "format": "markdown",
      "must_write": true
    },
    "rules_source": "docs/phase8_strict_mode.md",
    "ruleset": "strict mode generation, Azure structured output, schema compliance, builder fallback"
  },
  "checks": [
    {
      "id": "strict-mode-implementation-v2.0.0",
      "expect": "llm_generate_component_strict() implemented - uses Azure json_schema, temperature=0.0, handles control/modulation/shader",
      "files": ["labs/v0_7_3/llm.py", "tests/v0_7_3/test_strict_mode_llm.py"],
      "patterns": ["def llm_generate_component_strict", "response_format", "json_schema", "strict_subschema", "temperature=0.0", "test_strict_mode_control", "test_strict_mode_shader"]
    },
    {
      "id": "ensure-strict-schema-v2.0.0",
      "expect": "Deep schema traversal - _ensure_strict_schema() uses copy.deepcopy, handles anyOf/oneOf/allOf, items arrays, adds additionalProperties:false recursively",
      "files": ["labs/v0_7_3/llm.py", "tests/v0_7_3/test_strict_mode_llm.py"],
      "patterns": ["def _ensure_strict_schema", "copy.deepcopy", "anyOf", "oneOf", "allOf", "items", "additionalProperties", "test_ensure_strict_schema"]
    },
    {
      "id": "generator-integration-v2.0.0",
      "expect": "Generator routes strict components - _generate_with_azure() initializes asset/builders, calls _detect_components, routes control/modulation/shader to strict mode, fallback to builders",
      "files": ["labs/v0_7_3/generator.py", "tests/v0_7_3/test_generator.py"],
      "patterns": ["def _generate_with_azure", "asset = {", "builders = {", "_detect_components", "if component_name in {'control', 'modulation', 'shader'}", "except Exception", "test_azure_generator_validates"]
    },
    {
      "id": "component-detection-v2.0.0",
      "expect": "Component detection from prompts - _detect_components() extracts modality from plan, uses keyword matching, fallback to shader",
      "files": ["labs/v0_7_3/generator.py", "tests/v0_7_3/test_strict_mode_llm.py"],
      "patterns": ["def _detect_components", "plan.get('modality'", "prompt_lower", "shader", "control", "modulation", "components.append", "test_detect_components"]
    },
    {
      "id": "builder-fallback-v2.0.0",
      "expect": "Fallback to builders on exception - try/except wraps llm_generate_component_strict, calls builders[component_name] on failure",
      "files": ["labs/v0_7_3/generator.py"],
      "patterns": ["try:", "llm_generate_component_strict", "except Exception", "builders[component_name]"]
    },
    {
      "id": "json-parse-safety-v2.0.0",
      "expect": "Safe JSON parsing - json.loads() wrapped in try/except JSONDecodeError, handles empty payload, validates dict type",
      "files": ["labs/v0_7_3/llm.py"],
      "patterns": ["try:", "json.loads", "except json.JSONDecodeError", "except JSONDecodeError", "payload or", "isinstance(data, dict)"]
    },
    {
      "id": "determinism-v2.0.0",
      "expect": "Deterministic generation - strict mode uses temperature=0.0",
      "files": ["labs/v0_7_3/llm.py"],
      "patterns": ["temperature=0.0", "# Deterministic"]
    },
    {
      "id": "mcp-validation-preserved-v2.0.0",
      "expect": "MCP authority maintained - validate_asset() called on complete asset, no local schema storage",
      "files": ["labs/v0_7_3/generator.py", "labs/mcp/validate.py"],
      "patterns": ["validate_asset", "validation = validate_asset(asset)", "from labs.mcp.validate import validate_asset", "load_schema_bundle"]
    },
    {
      "id": "azure-credentials-handling-v2.0.0",
      "expect": "Azure credentials required - AZURE_OPENAI_API_KEY checked, AZURE_OPENAI_ENDPOINT set, AZURE_OPENAI_API_VERSION defaults to 2024-12-01-preview",
      "files": ["labs/v0_7_3/generator.py", "tests/v0_7_3/test_strict_mode_llm.py"],
      "patterns": ["AZURE_OPENAI_API_KEY", "AZURE_OPENAI_ENDPOINT", "AZURE_OPENAI_API_VERSION", "os.getenv", "pytest.skip"]
    },
    {
      "id": "component-scope-v2.0.0",
      "expect": "Phase 8 scope limited - only control, modulation, shader use LLM, tone/haptic fallback to builders",
      "files": ["labs/v0_7_3/llm.py", "labs/v0_7_3/generator.py"],
      "patterns": ["STRICT_COMPONENTS", "{'control', 'modulation', 'shader'}", "else:", "builders[component_name]"]
    },
    {
      "id": "no-skipped-tests-v2.0.0",
      "expect": "Azure test no longer skipped - test_azure_generator_validates runs with credentials, passes with strict mode",
      "files": ["tests/v0_7_3/test_generator.py"],
      "patterns": ["def test_azure_generator_validates", "not", "pytest.skip", "assert result['ok'] is True"]
    }
  ],
  "report": {
    "sections": [
      "Summary: Phase 8 strict mode LLM generation state",
      "Strict Mode Implementation: llm_generate_component_strict() for control/modulation/shader",
      "Deep Schema Traversal: _ensure_strict_schema() recursive implementation",
      "Generator Integration: Asset initialization, component detection, routing",
      "Fallback Strategy: Builder fallback on LLM exceptions",
      "JSON Safety: Parse error handling",
      "Determinism: temperature=0.0 for strict mode",
      "Azure Integration: Credentials, API version, deployment",
      "Test Coverage: Unit tests and integration tests",
      "MCP Authority: Validation flow, schema source",
      "Next Steps: Phase 9 flexible mode preview"
    ],
    "status_values": ["✅ Complete", "❌ Missing", "⚠️ Partial", "⏳ In Progress"]
  },
  "exit_criteria": [
    "meta/output/labs_phase8_state.md written with Phase 8 assessment",
    "llm_generate_component_strict() implemented with temperature=0.0",
    "_ensure_strict_schema() handles deep traversal (anyOf, items)",
    "Control/modulation/shader generated via Azure structured output",
    "_generate_with_azure() initializes asset/builders correctly",
    "_detect_components() extracts components from prompts",
    "Builder fallback works on LLM exceptions",
    "test_azure_generator_validates passes (no longer skipped)",
    "All strict mode unit tests pass",
    "MCP validation passes for all generated assets"
  ]
}
